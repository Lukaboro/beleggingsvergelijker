{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pieter\\\\Beleggingsvergelijker\\\\frontend\\\\src\\\\pages\\\\Results.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Results.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BankCard from '../components/BankCard';\nimport LeadForm from '../components/LeadForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const navigate = useNavigate();\n  const [matches, setMatches] = useState([]);\n  const [userPreferences, setUserPreferences] = useState({});\n  const [showLeadForm, setShowLeadForm] = useState(false);\n  const [selectedBank, setSelectedBank] = useState(null);\n  useEffect(() => {\n    // Get matches and preferences from localStorage\n    const storedMatches = localStorage.getItem('matchResults');\n    const storedPreferences = localStorage.getItem('userPreferences');\n    if (!storedMatches || !storedPreferences) {\n      // Redirect to start if no data is available\n      navigate('/');\n      return;\n    }\n    setMatches(JSON.parse(storedMatches));\n    setUserPreferences(JSON.parse(storedPreferences));\n  }, [navigate]);\n  const handleContactRequest = bankId => {\n    setSelectedBank(bankId);\n    setShowLeadForm(true);\n  };\n  const handleGuidanceRequest = bankId => {\n    setSelectedBank(bankId);\n    setShowLeadForm(true);\n    // Pre-select guidance option in form\n  };\n  const handleLeadSubmit = async leadData => {\n    try {\n      const response = await fetch('http://localhost:8000/api/submit-lead', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...leadData,\n          preferences: userPreferences\n        })\n      });\n      const data = await response.json();\n      if (data.status === 'success') {\n        // Show success message and redirect to report page\n        navigate('/report');\n      }\n    } catch (error) {\n      console.error('Error submitting lead:', error);\n      // Handle error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8 max-w-4xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-8\",\n      children: \"Jouw drie meest geschikte partners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-3 gap-6\",\n      children: matches.map(bank => /*#__PURE__*/_jsxDEV(BankCard, {\n        bank: bank,\n        onContactRequest: () => handleContactRequest(bank.id),\n        onGuidanceRequest: () => handleGuidanceRequest(bank.id)\n      }, bank.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), showLeadForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-12\",\n      children: /*#__PURE__*/_jsxDEV(LeadForm, {\n        bankId: selectedBank,\n        onSubmit: handleLeadSubmit,\n        onCancel: () => setShowLeadForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"VaB7r3vkkBckqvOivfB51VWm3H8=\", false, function () {\n  return [useNavigate];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BankCard","LeadForm","jsxDEV","_jsxDEV","Results","_s","navigate","matches","setMatches","userPreferences","setUserPreferences","showLeadForm","setShowLeadForm","selectedBank","setSelectedBank","storedMatches","localStorage","getItem","storedPreferences","JSON","parse","handleContactRequest","bankId","handleGuidanceRequest","handleLeadSubmit","leadData","response","fetch","method","headers","body","stringify","preferences","data","json","status","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","bank","onContactRequest","id","onGuidanceRequest","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Pieter/Beleggingsvergelijker/frontend/src/pages/Results.jsx"],"sourcesContent":["// frontend/src/pages/Results.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BankCard from '../components/BankCard';\r\nimport LeadForm from '../components/LeadForm';\r\n\r\nconst Results = () => {\r\n  const navigate = useNavigate();\r\n  const [matches, setMatches] = useState([]);\r\n  const [userPreferences, setUserPreferences] = useState({});\r\n  const [showLeadForm, setShowLeadForm] = useState(false);\r\n  const [selectedBank, setSelectedBank] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Get matches and preferences from localStorage\r\n    const storedMatches = localStorage.getItem('matchResults');\r\n    const storedPreferences = localStorage.getItem('userPreferences');\r\n    \r\n    if (!storedMatches || !storedPreferences) {\r\n      // Redirect to start if no data is available\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    setMatches(JSON.parse(storedMatches));\r\n    setUserPreferences(JSON.parse(storedPreferences));\r\n  }, [navigate]);\r\n  \r\n  const handleContactRequest = (bankId) => {\r\n    setSelectedBank(bankId);\r\n    setShowLeadForm(true);\r\n  };\r\n  \r\n  const handleGuidanceRequest = (bankId) => {\r\n    setSelectedBank(bankId);\r\n    setShowLeadForm(true);\r\n    // Pre-select guidance option in form\r\n  };\r\n  \r\n  const handleLeadSubmit = async (leadData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/submit-lead', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...leadData,\r\n          preferences: userPreferences,\r\n        }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.status === 'success') {\r\n        // Show success message and redirect to report page\r\n        navigate('/report');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting lead:', error);\r\n      // Handle error\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n        Jouw drie meest geschikte partners\r\n      </h1>\r\n      \r\n      <div className=\"grid md:grid-cols-3 gap-6\">\r\n        {matches.map((bank) => (\r\n          <BankCard\r\n            key={bank.id}\r\n            bank={bank}\r\n            onContactRequest={() => handleContactRequest(bank.id)}\r\n            onGuidanceRequest={() => handleGuidanceRequest(bank.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n      \r\n      {showLeadForm && (\r\n        <div className=\"mt-12\">\r\n          <LeadForm\r\n            bankId={selectedBank}\r\n            onSubmit={handleLeadSubmit}\r\n            onCancel={() => setShowLeadForm(false)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}