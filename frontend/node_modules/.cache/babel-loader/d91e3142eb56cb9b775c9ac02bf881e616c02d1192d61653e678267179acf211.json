{"ast":null,"code":"// frontend/src/pages/Results.jsx\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import BankCard from'../components/BankCard';import LeadForm from'../components/LeadForm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Results=()=>{const navigate=useNavigate();const[matches,setMatches]=useState([]);const[userPreferences,setUserPreferences]=useState({});const[showLeadForm,setShowLeadForm]=useState(false);const[selectedBank,setSelectedBank]=useState(null);useEffect(()=>{// Get matches and preferences from localStorage\nconst storedMatches=localStorage.getItem('matchResults');const storedPreferences=localStorage.getItem('userPreferences');if(!storedMatches||!storedPreferences){// Redirect to start if no data is available\nnavigate('/');return;}setMatches(JSON.parse(storedMatches));setUserPreferences(JSON.parse(storedPreferences));},[navigate]);const handleContactRequest=bankId=>{setSelectedBank(bankId);setShowLeadForm(true);};const handleGuidanceRequest=bankId=>{setSelectedBank(bankId);setShowLeadForm(true);// Pre-select guidance option in form\n};const handleLeadSubmit=async leadData=>{try{const response=await fetch('http://localhost:8000/api/submit-lead',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({...leadData,preferences:userPreferences})});const data=await response.json();if(data.status==='success'){// Show success message and redirect to report page\nnavigate('/report');}}catch(error){console.error('Error submitting lead:',error);// Handle error\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8 max-w-4xl\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-center mb-8\",children:\"Jouw drie meest geschikte partners\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid md:grid-cols-3 gap-6\",children:matches.map(bank=>/*#__PURE__*/_jsx(BankCard,{bank:bank,onContactRequest:()=>handleContactRequest(bank.id),onGuidanceRequest:()=>handleGuidanceRequest(bank.id)},bank.id))}),showLeadForm&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-12\",children:/*#__PURE__*/_jsx(LeadForm,{bankId:selectedBank,onSubmit:handleLeadSubmit,onCancel:()=>setShowLeadForm(false)})})]});};export default Results;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BankCard","LeadForm","jsx","_jsx","jsxs","_jsxs","Results","navigate","matches","setMatches","userPreferences","setUserPreferences","showLeadForm","setShowLeadForm","selectedBank","setSelectedBank","storedMatches","localStorage","getItem","storedPreferences","JSON","parse","handleContactRequest","bankId","handleGuidanceRequest","handleLeadSubmit","leadData","response","fetch","method","headers","body","stringify","preferences","data","json","status","error","console","className","children","map","bank","onContactRequest","id","onGuidanceRequest","onSubmit","onCancel"],"sources":["C:/Users/Pieter/Beleggingsvergelijker/frontend/src/pages/Results.jsx"],"sourcesContent":["// frontend/src/pages/Results.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BankCard from '../components/BankCard';\r\nimport LeadForm from '../components/LeadForm';\r\n\r\nconst Results = () => {\r\n  const navigate = useNavigate();\r\n  const [matches, setMatches] = useState([]);\r\n  const [userPreferences, setUserPreferences] = useState({});\r\n  const [showLeadForm, setShowLeadForm] = useState(false);\r\n  const [selectedBank, setSelectedBank] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Get matches and preferences from localStorage\r\n    const storedMatches = localStorage.getItem('matchResults');\r\n    const storedPreferences = localStorage.getItem('userPreferences');\r\n    \r\n    if (!storedMatches || !storedPreferences) {\r\n      // Redirect to start if no data is available\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    setMatches(JSON.parse(storedMatches));\r\n    setUserPreferences(JSON.parse(storedPreferences));\r\n  }, [navigate]);\r\n  \r\n  const handleContactRequest = (bankId) => {\r\n    setSelectedBank(bankId);\r\n    setShowLeadForm(true);\r\n  };\r\n  \r\n  const handleGuidanceRequest = (bankId) => {\r\n    setSelectedBank(bankId);\r\n    setShowLeadForm(true);\r\n    // Pre-select guidance option in form\r\n  };\r\n  \r\n  const handleLeadSubmit = async (leadData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/submit-lead', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...leadData,\r\n          preferences: userPreferences,\r\n        }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.status === 'success') {\r\n        // Show success message and redirect to report page\r\n        navigate('/report');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting lead:', error);\r\n      // Handle error\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-8\">\r\n        Jouw drie meest geschikte partners\r\n      </h1>\r\n      \r\n      <div className=\"grid md:grid-cols-3 gap-6\">\r\n        {matches.map((bank) => (\r\n          <BankCard\r\n            key={bank.id}\r\n            bank={bank}\r\n            onContactRequest={() => handleContactRequest(bank.id)}\r\n            onGuidanceRequest={() => handleGuidanceRequest(bank.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n      \r\n      {showLeadForm && (\r\n        <div className=\"mt-12\">\r\n          <LeadForm\r\n            bankId={selectedBank}\r\n            onSubmit={handleLeadSubmit}\r\n            onCancel={() => setShowLeadForm(false)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}